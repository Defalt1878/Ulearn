@using Database.Models
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using uLearn.Web.Core.Authentication.External.Kontur
@using uLearn.Web.Core.Extensions
@using uLearn.Web.Core.Models

@model uLearn.Web.Core.Models.ExternalLoginsListModel

@{
	var schemes = (await Context.GetExternalProvidersAsync())
		.Where(x => x.Name != "LTI" && (Model.AvailableProviders is null || !Model.AvailableProviders.Any() || Model.AvailableProviders.Contains(x.Name)))
		.OrderBy(x => x.DisplayName)
		.ToList();
	 
	 if (!schemes.Any()) 
	 { 
	 	<div></div> 
	 } 
	 else 
	 { 
	 	var action = Model.ActionName; 
	 	var returnUrl = Model.ReturnUrl; 
	 	using (Html.BeginForm(action, "Login", new { ReturnUrl = returnUrl })) 
	 	{
			 <div id="socialLoginList"> 
	 			<p> 
	 				@foreach (var scheme in schemes) 
	 				{ 
	 					switch (Model.Type) 
	 					{ 
	 						case ExternalLoginListType.Login or ExternalLoginListType.Registration: 
	 						{ 
	 							if (scheme.Name == KonturPassportConstants.AuthenticationType) 
	 							{ 
	 								<div class="strike-line grey"> 
	 									<span> 
	 										<i>или войдите как сотрудник Контура</i> 
	 									</span> 
	 								</div> 
	 							} 
	 							<button type="submit" class="ph-btn ph-btn-blue btn-block" id="@scheme.Name" name="provider" value="@scheme.Name" title="Войдите, используя ваш аккаунт @scheme.DisplayName"> 
	 								Войти через @scheme.DisplayName 
	 							</button> 
	 							break; 
	 						} 
	 						case ExternalLoginListType.Link when Model.UserLogins.Any(l => l.LoginProvider == scheme.Name): 
	 							continue; 
	 						case ExternalLoginListType.Link: 
	 							<button type="submit" class="btn btn-primary ib" id="@scheme.Name" name="provider" value="@scheme.Name" title="Привязать аккаунт @scheme.DisplayName"> 
	 								Привязать @scheme.DisplayName 
	 							</button> 
	 							break; 
	 					} 
	 				} 
	 			</p> 
	 			@if (Model.Type == ExternalLoginListType.Login) 
	 			{ 
	 				<input type="checkbox" id="ExternalLoginRememberMeCheckbox" name="RememberMe" class="hide" value="true"> 
	 			} 
	 		</div> 
	 	} 
	 } 
}